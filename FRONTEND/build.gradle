plugins {
  id 'java'
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.1.0'
}

group 'com.netclient'
version '1.0-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

repositories {
  mavenCentral()
}

javafx {
  version = '21'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {
  implementation 'org.springframework:spring-websocket:6.1.6'
  implementation 'org.springframework:spring-messaging:6.1.6'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
  implementation 'org.apache.httpcomponents:httpclient:4.5.14'

  // DÃ©pendances WebSocket Jakarta
  implementation 'jakarta.websocket:jakarta.websocket-api:2.1.0'
  implementation 'org.glassfish.tyrus:tyrus-client:2.1.5'
  implementation 'org.glassfish.tyrus:tyrus-container-grizzly-client:2.1.5'
  // Lombok
  implementation 'org.projectlombok:lombok:1.18.32'         // Pour runtime
  annotationProcessor 'org.projectlombok:lombok:1.18.32'   // Pour compilation
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

application {
  mainClass = 'com.netclient.frontend.MainApplication'
}

tasks.named('run') {
  doFirst {
    def javafxPath = configurations.runtimeClasspath
            .filter { it.name.contains('javafx') }
            .collect { it.parent }
            .unique()
            .join(File.pathSeparator)

    jvmArgs = [
            '--module-path', javafxPath,
            '--add-modules', 'javafx.controls,javafx.fxml,javafx.web'
    ]
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

test {
  useJUnitPlatform()
}